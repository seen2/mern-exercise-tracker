[{"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/reportWebVitals.js":"1","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/App.js":"2","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/Navbar.js":"3","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/EditExercise.js":"4","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/ExerciseList.js":"5","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/CreateUser.js":"6","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/CreateExercise.js":"7"},{"size":362,"mtime":1606722692518,"results":"8","hashOfConfig":"9"},{"size":1062,"mtime":1606751370730,"results":"10","hashOfConfig":"9"},{"size":875,"mtime":1606743220432,"results":"11","hashOfConfig":"9"},{"size":3485,"mtime":1606760666921,"results":"12","hashOfConfig":"9"},{"size":1839,"mtime":1606760784404,"results":"13","hashOfConfig":"9"},{"size":1215,"mtime":1606753938782,"results":"14","hashOfConfig":"9"},{"size":3152,"mtime":1606755935757,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16x5l1t",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/reportWebVitals.js",[],"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/App.js",[],["32","33"],"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/Navbar.js",[],"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/EditExercise.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default function EditExercise(props) {\n  const [userName, setUserName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [duration, setDuration] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [users, setUsers] = useState([]);\n\n  const onChangeUserName = (event) => {\n    setUserName(event.target.value);\n  };\n  const onChangeDescription = (event) => {\n    setDescription(event.target.value);\n  };\n  const onChangeDuration = (event) => {\n    setDuration(event.target.value);\n  };\n  const onChangeDate = (date) => {\n    setDate(date);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(props);\n        const res = await fetch(\n          `http://localhost:5000/exercises/${props.match.params.id}`\n        );\n        const exc = await res.json();\n        setUserName(exc.userName);\n        setDescription(exc.description);\n        setDuration(exc.duration);\n        setDate(new Date(exc.date));\n        const response = await fetch(\"http://localhost:5000/users/\");\n        const data = await response.json();\n        if (data.length) {\n          setUsers(data.map((user) => user.userName));\n          setUserName(data[0].userName);\n        }\n      } catch (error) {\n        alert(error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const onSUbmit = async (event) => {\n    try {\n      event.preventDefault();\n      const exercise = { userName, description, duration, date };\n      const response = await fetch(\n        `http://localhost:5000/exercises/update/${props.match.params.id}`,\n        {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(exercise),\n        }\n      );\n      const result = await response.json();\n      console.log(result);\n\n      window.location = \"/\";\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <h3>Edit Excercise Log</h3>\n      <form onSubmit={onSUbmit}>\n        <div className=\"form-group\">\n          <label>UserName:</label>\n          <select\n            required\n            className=\"form-control\"\n            value={userName}\n            onChange={onChangeUserName}\n          >\n            {users.map((user) => (\n              <option key={user} value={user}>\n                {user}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label>Description:</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={description}\n            onChange={onChangeDescription}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Duration (in minutes):</label>\n          <input\n            type=\"text\"\n            required\n            className=\"form-control\"\n            value={duration}\n            onChange={onChangeDuration}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Date:</label>\n          <DatePicker required selected={date} onChange={onChangeDate} />\n        </div>\n        <div className=\"form-group\">\n          <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n        </div>\n      </form>\n    </div>\n  );\n}\n","/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/ExerciseList.js",["35","36"],"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/CreateUser.js",[],"/home/lokpati/projects/exersice-tracker/mern-exersice-tracker/src/components/CreateExercise.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":48,"column":6,"nodeType":"43","endLine":48,"endColumn":8,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":12,"column":7,"nodeType":"47","endLine":12,"endColumn":76},{"ruleId":"48","severity":1,"message":"49","line":40,"column":13,"nodeType":"50","messageId":"51","endLine":40,"endColumn":17},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.","ArrayExpression",["54"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},"Update the dependencies array to be: [props]",{"range":"57","text":"58"},[1473,1475],"[props]"]